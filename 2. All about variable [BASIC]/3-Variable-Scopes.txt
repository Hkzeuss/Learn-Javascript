-----------------PHẠM VI (SCOPES)-----------------
- Trong JS, phạm vi đề cấp đến sự hiển thị của một biến hoặc cách mà nó có thể được sử dụng sau khi nó được khai báo.
- Phạm vi của 1 biến phụ thuộc vào từ khóa đã được sử dụng để khai báo nó.
- Ba loại phạm vi là:
    + Phạm vi toàn cầu (Global Scopes)
    + Phạm vi hàm (Functional Scopes)
    + Phạm vi khối (block scope)
- Trước khi ES6 (2015), JS chỉ có phạm vi toàn cầu và phạm vi hàm với từ khóa var. Sau đó đến ES6 thì giới thiệu let và const cho phép phạm vi khối trong JS.

- Phạm vi toàn cầu (Global Scopes): Các biến được khai báo bên ngoài bất kỳ hàm nào hoặc cặp dấu ngoặc nhọn {...} có phạm vi toàn cầu.,
  Và có thể truy cập bất kỳ đâu trong mã JS cùng 1 file. var/let/const đều có thể dùng cho phạm vi Global Scopes.

- Phạm vi hàm (Function Scopes): Các biến được khai báo trong 1 hàm chỉ có thể được sử dụng trong cùng 1 hàm đó.
  Bên ngoài hàm đó, chúng không xác định (undefined). var/let/const đều có thể dùng cho phạm vi Function Scopes.

- Phạm vi khối (Block Scopes): Một khối là bất kỳ phần nào của mã JS được bao quanh bởi dấu {...}.
  Các biến được khai báo trong 1 khối thì không thể được truy cập từ bên ngoài khối đó.
  Phạm vi này chỉ được dùng cho let và const.
  Nếu bạn khai báo 1 biến trong 1 khối bằng var, nó sẽ không có phạm vi khối.

- Phạm vi địa phương (Local Scopes): Các biến địa phương chỉ được nhận dạng bên trong hàm của chúng,
  các biến cùng tên có thể được sử dụng trong các hàm khac nhau. 
  Các biến địa phương được tạo khi 1 hàm bắt đầu và bị xóa khi hàm hoàn thành.
  var/let/const đều có thể dùng cho phạm vi Local Scopes.

- Tham khảo thêm: 
    + JavaScript Scope (https://www.w3schools.com/js/js_scope.asp)
    + javascript scope (https://wesbos.com/javascript/03-the-tricky-bits/scope)
    + Understanding Global Local Function Block Scope (https://www.youtube.com/watch?v=_E96W6ivHng)
